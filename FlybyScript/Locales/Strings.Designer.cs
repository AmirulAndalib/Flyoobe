//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Flyby11.Locales {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Flyby11.Locales.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You&apos;re ready to install Windows 11 on unsupported hardware! Ignore the &apos;Windows Server&apos; prompt; you&apos;re all set! ähnelt.
        /// </summary>
        public static string _debugInstallReady {
            get {
                return ResourceManager.GetString("_debugInstallReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starting the setup process with elevated privileges... ähnelt.
        /// </summary>
        public static string _debugInstallRunElevated {
            get {
                return ResourceManager.GetString("_debugInstallRunElevated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Oops! Something went wrong: ähnelt.
        /// </summary>
        public static string _debugStatusHandleIsoEx {
            get {
                return ResourceManager.GetString("_debugStatusHandleIsoEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mounting the ISO... Hang tight! ähnelt.
        /// </summary>
        public static string _debugStatusMounting {
            get {
                return ResourceManager.GetString("_debugStatusMounting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to mount the ISO. Please try again. ähnelt.
        /// </summary>
        public static string _debugStatusMountingFailed {
            get {
                return ResourceManager.GetString("_debugStatusMountingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ISO mounted successfully! Let&apos;s get this Windows 11 ready! ähnelt.
        /// </summary>
        public static string _debugStatusMountingSuccess {
            get {
                return ResourceManager.GetString("_debugStatusMountingSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Almost there! We&apos;re getting the setup ready... ähnelt.
        /// </summary>
        public static string _debugStatusRunning {
            get {
                return ResourceManager.GetString("_debugStatusRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setup file not found in ähnelt.
        /// </summary>
        public static string _debugStatusSetupFileNotFound {
            get {
                return ResourceManager.GetString("_debugStatusSetupFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1. The device is running a currently supported version of Windows 10. If the device isn&apos;t currently running a supported version of Windows 10, upgrade to a supported version of Windows 10. ähnelt.
        /// </summary>
        public static string ciuView_lblPtAns {
            get {
                return ResourceManager.GetString("ciuView_lblPtAns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 2. The device meets ähnelt.
        /// </summary>
        public static string ciuView_lblPtAns2 {
            get {
                return ResourceManager.GetString("ciuView_lblPtAns2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1. Download and run the ähnelt.
        /// </summary>
        public static string ciuView_lblPtAns3 {
            get {
                return ResourceManager.GetString("ciuView_lblPtAns3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 2. Select the following Windows Update shortcut and then select the Check for updates button: ähnelt.
        /// </summary>
        public static string ciuView_lblPtAns4 {
            get {
                return ResourceManager.GetString("ciuView_lblPtAns4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 3. Your device does not meet the official requirements for Windows 11? You can apply a compatibility patch to enable the Inplace Upgrade via Windows Update. ähnelt.
        /// </summary>
        public static string ciuView_lblPtAns5 {
            get {
                return ResourceManager.GetString("ciuView_lblPtAns5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An existing Windows 10 device can be upgraded to Windows 11 if it meets the following criteria: ähnelt.
        /// </summary>
        public static string ciuView_lblPtHdr {
            get {
                return ResourceManager.GetString("ciuView_lblPtHdr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To see if a Windows 10 device is eligible to upgrade to Windows 11, follow one of these options: ähnelt.
        /// </summary>
        public static string ciuView_lblPtHdr2 {
            get {
                return ResourceManager.GetString("ciuView_lblPtHdr2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die the minimum hardware specifications to run Windows 11. ähnelt.
        /// </summary>
        public static string ciuView_linkPtAns2 {
            get {
                return ResourceManager.GetString("ciuView_linkPtAns2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WhyNotWin11 app to confirm your device meets the minimum system requirements ähnelt.
        /// </summary>
        public static string ciuView_linkPtAns3 {
            get {
                return ResourceManager.GetString("ciuView_linkPtAns3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bypass patch canceled by user. ähnelt.
        /// </summary>
        public static string compPatch_debugCancel {
            get {
                return ResourceManager.GetString("compPatch_debugCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User attempted to select a non-removable drive. ähnelt.
        /// </summary>
        public static string compPatch_debugNotRemovableDrive {
            get {
                return ResourceManager.GetString("compPatch_debugNotRemovableDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No USB drive selected for patching. ähnelt.
        /// </summary>
        public static string compPatch_debugNoUSBDrive {
            get {
                return ResourceManager.GetString("compPatch_debugNoUSBDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to apply bypass patch: ähnelt.
        /// </summary>
        public static string compPatch_msgFailedEx {
            get {
                return ResourceManager.GetString("compPatch_msgFailedEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The selected path is not a removable drive. Please select a USB drive. ähnelt.
        /// </summary>
        public static string compPatch_msgNotRemovableDrive {
            get {
                return ResourceManager.GetString("compPatch_msgNotRemovableDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the USB drive containing your Windows 11 installation files.\nThis feature adds a compatibility patch to bypass certain system requirements.\nCompatible with drives prepared by any tool, including Rufus. Ensure the drive is ready! ähnelt.
        /// </summary>
        public static string compPatch_msgSelectDrive {
            get {
                return ResourceManager.GetString("compPatch_msgSelectDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This will apply compatibility bypass settings on the selected USB drive. Continue? ähnelt.
        /// </summary>
        public static string compPatch_msgSelectDriveConfirm {
            get {
                return ResourceManager.GetString("compPatch_msgSelectDriveConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bypass patch applied successfully! ähnelt.
        /// </summary>
        public static string compPatch_msgSuccess {
            get {
                return ResourceManager.GetString("compPatch_msgSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Flyby11 Upgrading Assistant ähnelt.
        /// </summary>
        public static string ctl_FormTitle {
            get {
                return ResourceManager.GetString("ctl_FormTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply Compatibility Patch to ISO (Clean Install) ähnelt.
        /// </summary>
        public static string ctl_inkCompPatch {
            get {
                return ResourceManager.GetString("ctl_inkCompPatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Can I upgrade to Windows 11? ähnelt.
        /// </summary>
        public static string ctl_linkCiuv {
            get {
                return ResourceManager.GetString("ctl_linkCiuv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Did the upgrade work? ähnelt.
        /// </summary>
        public static string ctl_linkVote {
            get {
                return ResourceManager.GetString("ctl_linkVote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Drag and drop the Windows 11 ISO to patch it and install on unsupported hardware (Inplace Upgrade). ähnelt.
        /// </summary>
        public static string ctl_statusLabel {
            get {
                return ResourceManager.GetString("ctl_statusLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A: You can download the latest ISO from the official Microsoft website or use the Fido Downloader. ähnelt.
        /// </summary>
        public static string faq_a1 {
            get {
                return ResourceManager.GetString("faq_a1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A: If you&apos;ve successfully installed Windows 11 and saved some money, feel free to leave a little something as a thank-you here. ähnelt.
        /// </summary>
        public static string faq_a2 {
            get {
                return ResourceManager.GetString("faq_a2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click here to donate and show your support. ähnelt.
        /// </summary>
        public static string faq_a2Link {
            get {
                return ResourceManager.GetString("faq_a2Link", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A: Once the ISO is mounted, the setup process runs in the background. The Windows installer starts, guiding you through the steps required to install Windows 11 on your machine. ähnelt.
        /// </summary>
        public static string faq_a3 {
            get {
                return ResourceManager.GetString("faq_a3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A: Please check the error messages and report it on GitHub. ähnelt.
        /// </summary>
        public static string faq_a4 {
            get {
                return ResourceManager.GetString("faq_a4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A: Yes, Microsoft has left a backdoor open. This method leverages a feature of the Windows 11 setup process that uses the Windows Server variant of the installation. Unlike the regular Windows 11 setup, this variant skips most hardware compatibility checks. ähnelt.
        /// </summary>
        public static string faq_a5 {
            get {
                return ResourceManager.GetString("faq_a5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A: According to Microsoft, you should throw your PC away. I would suggest installing Linux on it and moving away from Windows. ähnelt.
        /// </summary>
        public static string faq_a6 {
            get {
                return ResourceManager.GetString("faq_a6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A: The developer is Belim, also known as Builtbybel, who has contributed a lot of code to the Windows community. ähnelt.
        /// </summary>
        public static string faq_a7 {
            get {
                return ResourceManager.GetString("faq_a7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click here to learn more about the developer&apos;s work. ähnelt.
        /// </summary>
        public static string faq_a7Link {
            get {
                return ResourceManager.GetString("faq_a7Link", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download via Fido (Recommended) ähnelt.
        /// </summary>
        public static string faq_downloadFido {
            get {
                return ResourceManager.GetString("faq_downloadFido", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Microsoft Site ähnelt.
        /// </summary>
        public static string faq_downloadMS {
            get {
                return ResourceManager.GetString("faq_downloadMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Frequently Asked Questions (FAQ) ähnelt.
        /// </summary>
        public static string faq_header {
            get {
                return ResourceManager.GetString("faq_header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Q: Where can I get the latest Windows 11 ISO? ähnelt.
        /// </summary>
        public static string faq_q1 {
            get {
                return ResourceManager.GetString("faq_q1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Q: How can I support the developer? ähnelt.
        /// </summary>
        public static string faq_q2 {
            get {
                return ResourceManager.GetString("faq_q2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Q: How does the setup process work once the ISO is mounted? ähnelt.
        /// </summary>
        public static string faq_q3 {
            get {
                return ResourceManager.GetString("faq_q3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Q: What if I encounter issues during installation? ähnelt.
        /// </summary>
        public static string faq_q4 {
            get {
                return ResourceManager.GetString("faq_q4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Q: Is it legal to use this method? ähnelt.
        /// </summary>
        public static string faq_q5 {
            get {
                return ResourceManager.GetString("faq_q5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Q: What are my alternatives if my PC is not supported? ähnelt.
        /// </summary>
        public static string faq_q6 {
            get {
                return ResourceManager.GetString("faq_q6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Q: Who is the developer? ähnelt.
        /// </summary>
        public static string faq_q7 {
            get {
                return ResourceManager.GetString("faq_q7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Windows 11 installation can now proceed. Please follow the instructions in the setup window. ähnelt.
        /// </summary>
        public static string msg_InstallReady {
            get {
                return ResourceManager.GetString("msg_InstallReady", resourceCulture);
            }
        }
    }
}
